<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bovey&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/c1ec5fb4f559edd48112ef5d67abd7bd</icon>
  <subtitle>点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xubovey.github.io/"/>
  <updated>2019-08-27T02:27:47.164Z</updated>
  <id>https://xubovey.github.io/</id>
  
  <author>
    <name>xu.bovey</name>
    <email>xu.bovey@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux程序安装和arm移植的一点理解</title>
    <link href="https://xubovey.github.io/2019/08/09/190809-linux-install-arm/"/>
    <id>https://xubovey.github.io/2019/08/09/190809-linux-install-arm/</id>
    <published>2019-08-09T08:56:26.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="之前的理解"><a href="#之前的理解" class="headerlink" title="之前的理解"></a>之前的理解</h2><p>知道<code>sudo apt-get install ***</code>可以安装一些工具、软件。但是实际上对安装过程的理解并不是很懂。<br>后来会用过make config, make install之类来安装。了解到源码的编译安装过程。但是如何装到内核文件系统还是不太了解</p><h2 id="新的领悟"><a href="#新的领悟" class="headerlink" title="新的领悟"></a>新的领悟</h2><p><code>echo $PATH</code>这个命令是经常会用的，还用过<code>env</code>查看所有环境变量。但是并不知道这些变量哪里来的。刚才忽然想到应该是这样，make的时候完成对源文件的编译，make install的时候会进行编译输出文件的复制和环境变量的配置。所以应用文件移植到arm的过程就是用<code>arm-linux-gnueai-*</code>进行编译，安装到指定文件夹，然后把文件夹复制到arm内核文件系统。再把相关路径添加到<code>PATH</code>环境变量里就应该可以了。  </p><ol><li>下载安装包源文件</li><li>用arm编译工具编译安装包</li><li>把软件包安装到指定文件夹下</li><li>把输出文件夹内的文件复制到arm文件系统</li><li>修改arm文件系统的环境变量<code>etc/profile</code></li></ol><h2 id="验证结果"><a href="#验证结果" class="headerlink" title="验证结果"></a>验证结果</h2><p>//todo</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;之前的理解&quot;&gt;&lt;a href=&quot;#之前的理解&quot; class=&quot;headerlink&quot; title=&quot;之前的理解&quot;&gt;&lt;/a&gt;之前的理解&lt;/h2&gt;&lt;p&gt;知道&lt;code&gt;sudo apt-get install ***&lt;/code&gt;可以安装一些工具、软件。但是实际上对安
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>150G的C盘又满了</title>
    <link href="https://xubovey.github.io/2019/06/20/190620-clean-my-pc/"/>
    <id>https://xubovey.github.io/2019/06/20/190620-clean-my-pc/</id>
    <published>2019-06-20T07:54:11.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>C盘100G满的时候扩容到了150G，如今又提示不到13G了。。。</p><h2 id="不能忍"><a href="#不能忍" class="headerlink" title="不能忍"></a>不能忍</h2><p>眼睁睁看着C盘变大的时候，尝试过很多种廋身办法都没啥效果。</p><h2 id="绝地反击"><a href="#绝地反击" class="headerlink" title="绝地反击"></a>绝地反击</h2><p>后来发现在C盘取消所有文件隐藏的条件下，选中所有文件，查看大小是100G，这里消失的几十G哪里去了。。。然后就想着如何查看文件夹大小，接着就找到了工具wiztree，这个是好东西，软件很小，但是能几秒内统计100G的文件大小，并用色块表示文件大小。这样很容易就定位到了一些好几G的大文件夹，找到没用的删除之。其中有1个文件是N卡驱动缓存文件，5-6个G，使用工具DriverStoreExplorer.v0.10.39完成扫码驱动备份，并删除老版本的驱动</p><h2 id="C-windows-softwaredistribution过大处理"><a href="#C-windows-softwaredistribution过大处理" class="headerlink" title="C:\windows\softwaredistribution过大处理"></a>C:\windows\softwaredistribution过大处理</h2><p>需要以管理员身份启动cmd<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    Start&gt;Run</span><br><span class="line">   <span class="built_in"> type </span>cmd <span class="keyword">and</span> press enter</span><br><span class="line">   <span class="built_in"> type </span>net stop wuauserv <span class="keyword">and</span> press enter</span><br><span class="line">   <span class="built_in"> type </span>rename c:\windows\SoftwareDistribution softwaredistribution.old <span class="keyword">and</span> press enter</span><br><span class="line">   <span class="built_in"> type </span>net start wuauserv <span class="keyword">and</span> press enter</span><br><span class="line">   <span class="built_in"> type </span>exit <span class="keyword">and</span> press enter</span><br></pre></td></tr></table></figure></p><h2 id="Hiberfil-sys很大"><a href="#Hiberfil-sys很大" class="headerlink" title="Hiberfil.sys很大"></a>Hiberfil.sys很大</h2><p>Hiberfil.sys 是 Windows 休眠功能（Windows Hibernation）将内存数据与会话保存至硬盘、以便计算机断电重新启动后可以快速恢复会话所需的内存镜像文件。在早期版本的 Windows 中，Hiberfil.sys 文件的大小等同于物理内存大小；而在 Windows 7 中，Hiberfil.sys 可以在物理内存大小的 50%－100% 的范围自行调整。因此， Windows 7 的 Hiberfil.sys 大小不一定等同于物理内存大小。需要以管理员身份启动cmd<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmd</span><br><span class="line">powercfg -h off <span class="comment">//关系休眠，该文件可删除</span></span><br><span class="line">powercfg -h <span class="keyword">on</span>  <span class="comment">//如果需要可执行该命令，再次启动休眠</span></span><br></pre></td></tr></table></figure></p><h2 id="惨痛的教训"><a href="#惨痛的教训" class="headerlink" title="惨痛的教训"></a>惨痛的教训</h2><p>C:\Program Files\目录下有uninstall.exe文件，还有一些数据库文件，数据库相关的文件日期是14年的，可能是什么时候装软件选择的不对没有放到文件夹下。想用uninstall删除，结果悲催了。这个文件居然开始删除adobe和autocad，赶紧任务管理杀掉进程。后来分析uninstall是用来删除文件夹下其他文件的，所以…如果放任不管，我可能就真的悲催了。就这样重装了adobe，autocaad，7zip，git等问题解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;C盘100G满的时候扩容到了150G，如今又提示不到13G了。。。&lt;/p&gt;
&lt;h2 id=&quot;不能忍&quot;&gt;&lt;a href=&quot;#不能忍&quot; clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ubuntu mplayer no voice</title>
    <link href="https://xubovey.github.io/2019/06/10/190610-ubuntu-mplayer-no-voice/"/>
    <id>https://xubovey.github.io/2019/06/10/190610-ubuntu-mplayer-no-voice/</id>
    <published>2019-06-10T18:28:58.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>ubuntu环境18.04下<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install mplayer</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> mplayer</span><br></pre></td></tr></table></figure></p><h2 id="播放MP3"><a href="#播放MP3" class="headerlink" title="播放MP3"></a>播放MP3</h2><p>在mp3文件夹下执行<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mplayer</span> <span class="selector-tag">xxx</span><span class="selector-class">.mp3</span></span><br></pre></td></tr></table></figure></p><p>执行播放后无声音。发现Ubuntu下设置声音为静音。。。。打开后输出声音正常</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;ubuntu环境18.04下
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>190427-ubuntu-qt-ide</title>
    <link href="https://xubovey.github.io/2019/04/27/190427-ubuntu-qt-ide/"/>
    <id>https://xubovey.github.io/2019/04/27/190427-ubuntu-qt-ide/</id>
    <published>2019-04-27T13:16:28.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/meteor_s/article/details/79307496" target="_blank" rel="noopener">Ubuntu–搭建QT开发环境</a></p><h2 id="各种装"><a href="#各种装" class="headerlink" title="各种装"></a>各种装</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install qt4-<span class="built_in">dev</span>-tools<span class="comment">//QT资源包</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install qt4-qtconfig<span class="comment">//配置工具</span></span><br><span class="line"><span class="comment">//sudo apt-get install qt-demos//官方案例源代码</span></span><br><span class="line"><span class="comment">//sudo apt-get install qtcreator//IDE</span></span><br></pre></td></tr></table></figure><p>安装过程出现依赖项问题，解决办法：<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude <span class="keyword">install</span> qtcreator</span><br></pre></td></tr></table></figure></p><p>安装过程遇到<code>libclang-3.6 libobjc-5-dev libobjc4</code>没有安装，输入<code>n</code>,切换解决方案。部分库版本过高，选择降版本处理。</p><p>安装完成后执行<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">qmake -v</span><br><span class="line"><span class="comment"># QMake version 2.0.1a</span></span><br><span class="line">Using Qt version <span class="number">4.8</span>.<span class="number">7</span> in /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">x86_64</span>-<span class="title">linux</span>-<span class="title">gnu</span></span></span><br></pre></td></tr></table></figure></p><h2 id="编译工具"><a href="#编译工具" class="headerlink" title="编译工具"></a>编译工具</h2><ol><li>下载poky下载路径：<a href="https://pan.baidu.com/s/11WdTVIuiZNdrW1f5QjYAQA" target="_blank" rel="noopener">https://pan.baidu.com/s/11WdTVIuiZNdrW1f5QjYAQA</a>提取码：9zhv</li><li>安装： sh xx.sh</li><li>配置环境变量，在/opt/poky/1.4.3路径下执行 <code>source enviroment-setup-arm5te-poky-linux-gnuabi</code></li></ol><p>## fatal error: alsa/asoundlib.h: No such file or directory</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/meteor_s/article/details/79307496&quot; targ
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>190424-linux-dev-esp32</title>
    <link href="https://xubovey.github.io/2019/04/24/190424-linux-dev-esp32/"/>
    <id>https://xubovey.github.io/2019/04/24/190424-linux-dev-esp32/</id>
    <published>2019-04-24T16:34:26.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><h2 id="安装Linux下的软件需求"><a href="#安装Linux下的软件需求" class="headerlink" title="安装Linux下的软件需求"></a>安装Linux下的软件需求</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install gcc git wget <span class="keyword">make</span> libncurses-dev flex bison gperf <span class="keyword">python</span> <span class="keyword">python</span>-pip <span class="keyword">python</span>-setuptools <span class="keyword">python</span>-serial <span class="keyword">python</span>-cryptography <span class="keyword">python</span>-future <span class="keyword">python</span>-pyparsing <span class="keyword">python</span>-pyelftools</span><br></pre></td></tr></table></figure><h2 id="linux环境设置"><a href="#linux环境设置" class="headerlink" title="linux环境设置"></a>linux环境设置</h2><p><a href="https://dl.espressif.com/dl/xtensa-esp32-elf-linux64-1.22.0-61-gab8375a-5.2.0.tar.gz" target="_blank" rel="noopener">下载地址：</a><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/username/esp</span><br><span class="line">cd /home/username/esp</span><br><span class="line">tar -xzf /home/username/Downloads/xtensa-esp32-elf-linux64<span class="number">-1.22</span><span class="number">.0</span><span class="number">-61</span>-gab8375a<span class="number">-5.2</span><span class="number">.0</span>.tar.gz</span><br></pre></td></tr></table></figure></p><p>2.设置环境变量PATH，以便能搜索到我们的编译工具链在/home/username/.profile中添加<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/home/username/esp/xtensa-esp32-elf/bin</span></span><br></pre></td></tr></table></figure></p><p>具体操作：/usrname路径下<figure class="highlight plain"><figcaption><span>.profile```, 然后在文件尾部输入`o`，写入上面内容，输入`wq`退出。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">source .profile</span><br></pre></td></tr></table></figure></p><p>执行<code>echo $PATH</code>查看环境变量结果</p><h2 id="git-clone-SDK-ESP-IDF"><a href="#git-clone-SDK-ESP-IDF" class="headerlink" title="git clone SDK ESP-IDF"></a>git clone SDK ESP-IDF</h2><p>在esp目录下<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive http:<span class="regexp">//gi</span>thub.com<span class="regexp">/espressif/</span>esp-idf.git</span><br><span class="line">git submodule add https:<span class="regexp">//gi</span>thub.com<span class="regexp">/tuanpmt/</span>espmqtt.git components<span class="regexp">/espmqtt</span></span><br></pre></td></tr></table></figure></p><p>…等一会如果没有安装git<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> git</span><br></pre></td></tr></table></figure></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">"export IDF_PATH=~/esp/esp-idf"</span> &gt;&gt; ~<span class="string">/.bashrc</span></span><br><span class="line">source ~<span class="string">/.bashrc</span></span><br></pre></td></tr></table></figure><h2 id="编译helloworld"><a href="#编译helloworld" class="headerlink" title="编译helloworld"></a>编译helloworld</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cd </span><span class="string">examples/</span><span class="built_in">get-started/hello_world/</span></span><br><span class="line"><span class="built_in">make</span></span><br></pre></td></tr></table></figure><h2 id="烧写固件"><a href="#烧写固件" class="headerlink" title="烧写固件"></a>烧写固件</h2><p>识别到ttyUSB0设备后执行命令<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod <span class="number">777</span> <span class="regexp">/dev/</span>ttyUSB0</span><br><span class="line">make flash monitor</span><br></pre></td></tr></table></figure></p><p>提示<code>recipe for target &#39;flash&#39; failed</code>，输入<code>sudo chmod 777 /dev/ttyUSB0</code>即可</p><h1 id="ESP-TOUCH"><a href="#ESP-TOUCH" class="headerlink" title="ESP-TOUCH"></a>ESP-TOUCH</h1><p><a href="https://github.com/EspressifApp/ESP-TOUCHForAndroid" target="_blank" rel="noopener">https://github.com/EspressifApp/ESP-TOUCHForAndroid</a></p><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><ol><li>/esp/esp-idf/components/espmqtt/目录下执行mv mqtt_client.c mqtt_client.c.bak</li><li>/esp/esp-idf/components/espmqtt/include目录下执行mv mqtt_client.h mqtt_client.h.bak</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h1&gt;&lt;h2 id=&quot;安装Linux下的软件需求&quot;&gt;&lt;a href=&quot;#安装Linux下的软件需求&quot; class=&quot;headerlink
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>190401-tr_printer_debug</title>
    <link href="https://xubovey.github.io/2019/04/01/190401-printer-debug/"/>
    <id>https://xubovey.github.io/2019/04/01/190401-printer-debug/</id>
    <published>2019-04-01T20:57:24.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2A版本打印机调试记录"><a href="#2A版本打印机调试记录" class="headerlink" title="2A版本打印机调试记录"></a>2A版本打印机调试记录</h2><h3 id="打印机接口调试"><a href="#打印机接口调试" class="headerlink" title="打印机接口调试"></a>打印机接口调试</h3><p>版本变更：更换电平转换芯片，更换数据输出接口使layout更容易。修改代码后发现不能正常打印测试内容。经过各种验证得出如下结论：</p><ul><li>可打印整行直线，即DAT线长高</li><li>CLK,DAT,LATCH,DST信号波形良好无畸变</li></ul><p>尝试上拉、下拉无果</p><p>修改GPIO输出速度为High 无果</p><p>示波器测试各信号线波形良好。各种测试无果。</p><p>最后在DAT,CLK,LATCH信号线上串联47ohm电阻，问题解决.</p><ol><li>DAT+CLK+LATCH OK</li><li>ONLY DAT NOT OK</li><li>DAT+CLK OK</li><li>ONLY CLK OK</li><li>CLK串联电阻替换为对地并联电容，问题解决</li></ol><p>因为所用示波器采样率低，测试为发现波形明显异常。根据并联电容解决问题，分析CLK沿变太快导致接收异常。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2A版本打印机调试记录&quot;&gt;&lt;a href=&quot;#2A版本打印机调试记录&quot; class=&quot;headerlink&quot; title=&quot;2A版本打印机调试记录&quot;&gt;&lt;/a&gt;2A版本打印机调试记录&lt;/h2&gt;&lt;h3 id=&quot;打印机接口调试&quot;&gt;&lt;a href=&quot;#打印机接口调试&quot; c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>190324-ubuntu 16 for imx6,7,8</title>
    <link href="https://xubovey.github.io/2019/03/24/190324-ubuntu-16-for-imx6-7-8/"/>
    <id>https://xubovey.github.io/2019/03/24/190324-ubuntu-16-for-imx6-7-8/</id>
    <published>2019-03-24T08:24:01.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="boot-from-sd"><a href="#boot-from-sd" class="headerlink" title="boot from sd"></a>boot from sd</h2><p><a href="https://blog.csdn.net/kongzhongloucsdn/article/details/54016248" target="_blank" rel="noopener">参考</a>SD 卡启动是开发板系统启动方式的一种。 SD 系统启动卡共有 FAT32、 EXT3 两个格式分区，还包含 RAW 格式的无名分区。其中 FAT32 格式分区在 Windows 系统下可见，EXT3 格式分区在 Windows 系统下不可见，两分区在 Linux 系统下均可见。无名分区在Windows 和 Linux 操作系统下均不可见。 无名分区存放 u-boot.ais， FAT32 格式分区存放内核文件 uImage、系统启动脚本等文件， EXT3 格式分区存放文件系统。 </p><h2 id="如何做个SD卡启动卡"><a href="#如何做个SD卡启动卡" class="headerlink" title="如何做个SD卡启动卡"></a>如何做个SD卡启动卡</h2><h3 id="step1-安装mkimage-搭建环境"><a href="#step1-安装mkimage-搭建环境" class="headerlink" title="step1 安装mkimage,搭建环境"></a>step1 安装mkimage,搭建环境</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install uboot-mkimage</span><br></pre></td></tr></table></figure><p>提示<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Reading <span class="keyword">package</span> <span class="title">l</span>ists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">E: Unable to locate <span class="keyword">package</span> <span class="title">uboot-image</span></span><br><span class="line">root@ubuntu:/# apt-get install uboot-mkimage</span><br><span class="line">Reading <span class="keyword">package</span> <span class="title">l</span>ists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line"><span class="keyword">Package</span> <span class="title">uboot-mkimage </span><span class="keyword">is</span> <span class="keyword">not</span> available, but <span class="keyword">is</span> referred to by another <span class="keyword">package</span>.</span><br><span class="line">This may mean that the <span class="keyword">package</span> <span class="title"></span><span class="keyword">is</span> missing, has been obsoleted, <span class="keyword">or</span></span><br><span class="line"><span class="keyword">is</span> only available from another source</span><br><span class="line">However the following packages replace it:</span><br><span class="line">  u-boot-tools:i386 u-boot-tools</span><br></pre></td></tr></table></figure></p><p>重新输入命令<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install u-boot-tools</span><br></pre></td></tr></table></figure></p><p>安装好后命令行输入<code>mkimage</code><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Usage: mkimage -l <span class="built_in">image</span></span><br><span class="line">          -l ==&gt; <span class="built_in">list</span> <span class="built_in">image</span> header information</span><br><span class="line">       mkimage [-x] -A arch -O os -T <span class="built_in">type</span> -C comp -a addr -e ep -n <span class="built_in">name</span> -d data_file[:data_file...] <span class="built_in">image</span></span><br><span class="line">          -A ==&gt; <span class="built_in">set</span> architecture <span class="keyword">to</span> <span class="string">'arch'</span></span><br><span class="line">          -O ==&gt; <span class="built_in">set</span> operating system <span class="keyword">to</span> <span class="string">'os'</span></span><br><span class="line">          -T ==&gt; <span class="built_in">set</span> <span class="built_in">image</span> <span class="built_in">type</span> <span class="keyword">to</span> <span class="string">'type'</span></span><br><span class="line">          -C ==&gt; <span class="built_in">set</span> compression <span class="built_in">type</span> <span class="string">'comp'</span></span><br><span class="line">          -a ==&gt; <span class="built_in">set</span> <span class="built_in">load</span> address <span class="keyword">to</span> <span class="string">'addr'</span> (hex)</span><br><span class="line">          -e ==&gt; <span class="built_in">set</span> entry point <span class="keyword">to</span> <span class="string">'ep'</span> (hex)</span><br><span class="line">          -n ==&gt; <span class="built_in">set</span> <span class="built_in">image</span> <span class="built_in">name</span> <span class="keyword">to</span> <span class="string">'name'</span></span><br><span class="line">          -d ==&gt; use <span class="built_in">image</span> data <span class="keyword">from</span> <span class="string">'datafile'</span></span><br><span class="line">          -x ==&gt; <span class="built_in">set</span> XIP (execute <span class="built_in">in</span> place)</span><br><span class="line">       mkimage [-D dtc_options] [-f fit-<span class="built_in">image</span>.its|-F] fit-<span class="built_in">image</span></span><br><span class="line">          -D =&gt; <span class="built_in">set</span> all options <span class="keyword">for</span> device tree compiler</span><br><span class="line">          -f =&gt; input filename <span class="keyword">for</span> FIT source</span><br><span class="line">Signing / verified boot <span class="built_in">not</span> supported (CONFIG_FIT_SIGNATURE undefined)</span><br><span class="line">       mkimage -V ==&gt; print version information <span class="built_in">and</span> <span class="keyword">exit</span></span><br><span class="line">Use -T <span class="keyword">to</span> see a <span class="built_in">list</span> of available <span class="built_in">image</span> types</span><br></pre></td></tr></table></figure></p><h3 id="step2-SD卡启动脚本制作"><a href="#step2-SD卡启动脚本制作" class="headerlink" title="step2 SD卡启动脚本制作"></a>step2 SD卡启动脚本制作</h3><ul><li>将 SD 卡格式化成无名分区（ RAW 格式）、 boot 分区（ FAT32 格式）和 rootfs分区（ EXT3 格式）。</li><li>拷贝镜像所在目录相关文件到 SD 卡对应分区。</li><li>在 boot 分区生成 SD 卡启动脚本源文件和 SD 卡启动脚本镜像。</li></ul><h3 id="step3-把镜像等文件复制到sd卡上"><a href="#step3-把镜像等文件复制到sd卡上" class="headerlink" title="step3 把镜像等文件复制到sd卡上"></a>step3 把镜像等文件复制到sd卡上</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;boot-from-sd&quot;&gt;&lt;a href=&quot;#boot-from-sd&quot; class=&quot;headerlink&quot; title=&quot;boot from sd&quot;&gt;&lt;/a&gt;boot from sd&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>190321-cadence note</title>
    <link href="https://xubovey.github.io/2019/03/21/190321-cadence-note/"/>
    <id>https://xubovey.github.io/2019/03/21/190321-cadence-note/</id>
    <published>2019-03-21T14:37:43.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理图中画三角形"><a href="#原理图中画三角形" class="headerlink" title="原理图中画三角形"></a>原理图中画三角形</h2><p>选择Place-&gt;Poliline，或者快捷键”Y”，启动画多边形命令，默认情况是画直角多边形的，按下shift可画任意角度拐角，这样就可以画三角形了。</p><h2 id="allegro局部缩放"><a href="#allegro局部缩放" class="headerlink" title="allegro局部缩放"></a>allegro局部缩放</h2><p>Manufacture-&gt;draft-&gt;Create detail 局部缩放</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原理图中画三角形&quot;&gt;&lt;a href=&quot;#原理图中画三角形&quot; class=&quot;headerlink&quot; title=&quot;原理图中画三角形&quot;&gt;&lt;/a&gt;原理图中画三角形&lt;/h2&gt;&lt;p&gt;选择Place-&amp;gt;Poliline，或者快捷键”Y”，启动画多边形命令，默认情况是画直
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>190320 linux cmd</title>
    <link href="https://xubovey.github.io/2019/03/20/190320-linux-cmd/"/>
    <id>https://xubovey.github.io/2019/03/20/190320-linux-cmd/</id>
    <published>2019-03-20T10:02:08.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看存储空间使用情况"><a href="#查看存储空间使用情况" class="headerlink" title="查看存储空间使用情况"></a>查看存储空间使用情况</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看当前系统磁盘使用空间</span></span><br><span class="line">df -<span class="built_in">h</span></span><br><span class="line"><span class="comment">//查看当前目录文件占用空间大小</span></span><br><span class="line">du -<span class="keyword">sh</span> *</span><br></pre></td></tr></table></figure><p>运行效果如下<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@<span class="symbol">tianRong:</span>/usr<span class="comment"># du -sh *</span></span><br><span class="line"><span class="number">5.7</span>M    bin</span><br><span class="line"><span class="number">112.0</span>K  etc</span><br><span class="line"><span class="number">128.5</span>M  <span class="class"><span class="keyword">lib</span></span></span><br><span class="line"><span class="number">0</span>       local</span><br><span class="line"><span class="number">60.0</span>K   regdefault</span><br><span class="line"><span class="number">1.4</span>M    sbin</span><br><span class="line"><span class="number">6.3</span>M    share</span><br><span class="line"></span><br><span class="line">root@<span class="symbol">tianRong:</span>/usr<span class="comment"># df -h</span></span><br><span class="line">Filesystem                Size      Used Available Use% Mounted on</span><br><span class="line"><span class="symbol">ubi0:</span>rootfs             <span class="number">104.6</span>M     <span class="number">98.6</span>M      <span class="number">1.3</span>M  <span class="number">99</span>% <span class="regexp">/</span></span><br><span class="line"><span class="regexp">devtmpfs                 60.4M      4.0K     60.4M   0% /dev</span></span><br><span class="line">tmpfs                    <span class="number">60.6</span>M     <span class="number">80.0</span>K     <span class="number">60.5</span>M   <span class="number">0</span>% <span class="regexp">/var/volatile</span></span><br><span class="line">tmpfs                    <span class="number">60.6</span>M         <span class="number">0</span>     <span class="number">60.6</span>M   <span class="number">0</span>% <span class="regexp">/media/ram</span></span><br><span class="line">tmpfs                    <span class="number">60.6</span>M    <span class="number">244.0</span>K     <span class="number">60.4</span>M   <span class="number">0</span>% <span class="regexp">/tmp</span></span><br><span class="line"><span class="regexp">ubi0_1                  107.9M     24.0K    103.1M   0% /mnt</span><span class="regexp">/user</span></span><br></pre></td></tr></table></figure></p><h2 id="重新加载文件系统"><a href="#重新加载文件系统" class="headerlink" title="重新加载文件系统"></a>重新加载文件系统</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mount</span> -o remount -rw /</span><br></pre></td></tr></table></figure><p>Linux 文件权限 变成制度 readonly 解决方法文件系统加载为只读<figure class="highlight plain"><figcaption><span>-n -o remount,ro</span><a href="/```">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">修改为```mount -n -o remount, rw /```即为读写模式加载</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## su,sudo,退出</span><br><span class="line">终端使用sudo可实现,使用su可进入root把$变成# </span><br><span class="line">退出：ctrl+D,exit,logout</span><br><span class="line"></span><br><span class="line">## ls -Sl或-lS 按大小排序</span><br><span class="line"></span><br><span class="line">## 遍历当前文件夹中所有文件夹内文件，输出md5到指定文件夹</span><br></pre></td></tr></table></figure></p><p>find ./ ! -name ‘checksum’ -prune -type f -print0 | xargs -0 md5sum &gt; ./checksum<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 打包</span><br></pre></td></tr></table></figure></p><p>tar -zcvf rootfs.tar.gz ./rootfs<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">打包过程：</span><br><span class="line"><span class="number">1</span>. 把当前可用的最新文件系统复制到Linux下</span><br><span class="line"><span class="number">2</span>. 把调试中修改过的usr,opt,etc文件夹打包，并复制到Linux下</span><br><span class="line"><span class="number">3</span>. 把修改后的<span class="number">3</span>个文件夹替换，替换后遍历所有文件并做MD5校验</span><br><span class="line"><span class="number">4</span>. 把新的文件系统打包</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除文件夹</span></span><br><span class="line">rm -rf * <span class="regexp">//</span>删除文件下所有文件，包含子文件夹</span><br><span class="line"></span><br><span class="line"><span class="comment">## 环境变量删除</span></span><br><span class="line">export -n</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看文件被哪个进程占用</span></span><br><span class="line">lsof</span><br><span class="line"></span><br><span class="line"><span class="comment">## QT命令行编译</span></span><br><span class="line">执行qmake xxx.pro生产makefile，执行make完成编译</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 声音播放，音量调节</span></span><br><span class="line">aplay ***.mav</span><br><span class="line">alsamixer</span><br><span class="line">aplay -l 可查看声卡信息</span><br><span class="line">aplay -D <span class="symbol">plughw:</span><span class="number">0</span>,<span class="number">0</span> xxx.wav</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## ubuntu下rpm包解压缩</span></span><br><span class="line">rpm2cpio ../alsa-<span class="class"><span class="keyword">lib</span>-<span class="title">dev</span>-1.1.0-<span class="title">r0</span>.<span class="title">armv5e</span>.<span class="title">rpm</span> | <span class="title">cpio</span> -<span class="title">idv</span></span></span><br><span class="line">批量使用</span><br><span class="line"><span class="keyword">for</span> name in *.rpm; <span class="keyword">do</span> rpm2cpio $name | cpio -idv; done</span><br><span class="line"></span><br><span class="line"><span class="comment">## sh文件安装</span></span><br><span class="line">sh xx.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 脚本死循环</span></span><br></pre></td></tr></table></figure></p><p>cnt=1;while :do    echo $cnt;    let cnt+=1;    xxx    sleep 3done<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 脚本升级</span><br></pre></td></tr></table></figure></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 脚本MD5</span><br></pre></td></tr></table></figure><p>sudo rm rootfs.tar.gzsudo rm checksumsudo find -type f | xargs md5sum &gt;/tmp/checksumsudo cp /tmp/checksum checksumsudo tar cvzf rootfs.tar.gz *sudo chmod -R 777 rootfs.tar.gz<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">`md5sum -c checksum`校验结果,其中checksum为校验结果存放位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 解压</span></span><br><span class="line"><span class="string">.tar</span> </span><br><span class="line">解包：tar xvf FileName.tar </span><br><span class="line">打包：tar cvf FileName.tar DirName </span><br><span class="line">（注：tar是打包，不是压缩！） </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.gz</span> </span><br><span class="line">解压1：gunzip FileName.gz </span><br><span class="line">解压2：gzip -d FileName.gz </span><br><span class="line">压缩：gzip FileName </span><br><span class="line"><span class="string">.tar.gz</span> 和 <span class="string">.tgz</span> </span><br><span class="line">解压：tar zxvf FileName.tar.gz </span><br><span class="line">压缩：tar zcvf FileName.tar.gz DirName </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.bz2</span> </span><br><span class="line">解压1：bzip2 -d FileName.bz2 </span><br><span class="line">解压2：bunzip2 FileName.bz2 </span><br><span class="line">压缩： bzip2 -z FileName </span><br><span class="line"><span class="string">.tar.bz2</span> </span><br><span class="line">解压：tar jxvf FileName.tar.bz2 </span><br><span class="line">压缩：tar jcvf FileName.tar.bz2 DirName </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.bz</span> </span><br><span class="line">解压1：bzip2 -d FileName.bz </span><br><span class="line">解压2：bunzip2 FileName.bz </span><br><span class="line">压缩：未知 </span><br><span class="line"><span class="string">.tar.bz</span> </span><br><span class="line">解压：tar jxvf FileName.tar.bz </span><br><span class="line">压缩：未知 </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.Z</span> </span><br><span class="line">解压：uncompress FileName.Z </span><br><span class="line">压缩：compress FileName </span><br><span class="line"><span class="string">.tar.Z</span> </span><br><span class="line">解压：tar Zxvf FileName.tar.Z </span><br><span class="line">压缩：tar Zcvf FileName.tar.Z DirName </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.zip</span> </span><br><span class="line">解压：unzip FileName.zip </span><br><span class="line">压缩：zip FileName.zip DirName </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.rar</span> </span><br><span class="line">解压：rar x FileName.rar </span><br><span class="line">压缩：rar a FileName.rar DirName </span><br><span class="line">rar请到： </span><br><span class="line">http:<span class="string">//www.rarsoft.com/download.htm</span> </span><br><span class="line">下载！ </span><br><span class="line">解压后请将rar_static拷贝到<span class="string">/usr/bin</span>目录（其他由$PATH环境变量指定的目录也能）： </span><br><span class="line">[root@www2 tmp]<span class="comment"># cp rar_static /usr/bin/rar </span></span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.lha</span> </span><br><span class="line">解压：lha -e FileName.lha </span><br><span class="line">压缩：lha -a FileName.lha FileName </span><br><span class="line">lha请到： </span><br><span class="line">http:<span class="string">//www.infor.kanazawa-it.ac.jp/</span>~ishii/lhaunix/ </span><br><span class="line">下载！ </span><br><span class="line">&gt;解压后请将lha拷贝到<span class="string">/usr/bin</span>目录（其他由$PATH环境变量指定的目录也能）： </span><br><span class="line">[root@www2 tmp]<span class="comment"># cp lha /usr/bin/ </span></span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.rpm</span> </span><br><span class="line">解包：rpm2cpio FileName.rpm | cpio -div </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.deb</span> </span><br><span class="line">解包：ar p FileName.deb data.tar.gz | tar zxf - </span><br><span class="line"><span class="params">---------------------------------------------</span> </span><br><span class="line"><span class="string">.tar</span> <span class="string">.tgz</span> <span class="string">.tar.gz</span> <span class="string">.tar.Z</span> </span><br><span class="line"><span class="string">.tar.bz</span> <span class="string">.tar.bz2</span> <span class="string">.zip</span> <span class="string">.cpio</span> <span class="string">.rpm</span> <span class="string">.deb</span> <span class="string">.slp</span> <span class="string">.arj</span> <span class="string">.rar</span> <span class="string">.ace</span> <span class="string">.lha</span> <span class="string">.lzh</span> </span><br><span class="line"><span class="string">.lzx</span> <span class="string">.lzs</span> <span class="string">.arc</span> <span class="string">.sda</span> <span class="string">.sfx</span> <span class="string">.lnx</span> <span class="string">.zoo</span> <span class="string">.cab</span> <span class="string">.kar</span> <span class="string">.cpt</span> <span class="string">.pit</span> <span class="string">.sit</span> <span class="string">.sea</span> </span><br><span class="line">解压：sEx x FileName.* </span><br><span class="line">压缩：sEx a FileName.* FileName </span><br><span class="line">sEx只是调用相关程式，本身并无压缩、解压功能，请注意！ </span><br><span class="line">sEx请到： </span><br><span class="line">http:<span class="string">//sourceforge.net/projects/sex</span> </span><br><span class="line">下载！ </span><br><span class="line">解压后请将sEx拷贝到<span class="string">/usr/bin</span>目录（其他由$PATH环境变量指定的目录也能）： </span><br><span class="line">[root@www2 tmp]<span class="comment"># cp sEx /usr/bin/ </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## arm交叉编译器gnueabi、none-eabi、arm-eabi、gnueabihf、gnueabi区别</span></span><br><span class="line">命名规则</span><br><span class="line">交叉编译工具链的命名规则为：arch [-vendor] [-os] [-<span class="params">(gnu)</span>eabi]</span><br><span class="line"></span><br><span class="line">arch – 体系架构，如ARM，MIPS</span><br><span class="line">vendor – 工具链提供商</span><br><span class="line">os – 目标操作系统</span><br><span class="line">eabi – 嵌入式应用二进制接口（Embedded Application Binary Interface）</span><br><span class="line">根据对操作系统的支持与否，ARM GCC可分为支持和不支持操作系统，如</span><br><span class="line"></span><br><span class="line">arm-none-eabi：这个是没有操作系统的，自然不可能支持那些跟操作系统关系密切的函数，比如fork<span class="params">(2)</span>。他使用的是newlib这个专用于嵌入式系统的C库。</span><br><span class="line">arm-none-linux-eabi：用于Linux的，使用Glibc</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> 实例</span><br><span class="line">1、arm-none-eabi-gcc</span><br><span class="line">（ARM architecture，no vendor，not target an operating system，complies with the ARM EABI）</span><br><span class="line">用于编译 ARM 架构的裸机系统（包括 ARM Linux 的 boot、kernel，不适用编译 Linux 应用 Application），一般适合 ARM7、Cortex-M 和 Cortex-R 内核的使用，所以不支持那些跟操作系统关系密切的函数，比如fork<span class="params">(2)</span>，他使用的是 newlib 这个专用于嵌入式系统的C库。</span><br><span class="line"></span><br><span class="line">2、arm-none-linux-gnueabi-gcc</span><br><span class="line"><span class="params">(ARM architecture, no vendor, creates binaries that run on the Linux operating system, and uses the GNU EABI)</span></span><br><span class="line"></span><br><span class="line">主要用于基于ARM架构的Linux系统，可用于编译 ARM 架构的 u-boot、Linux内核、linux应用等。arm-none-linux-gnueabi基于GCC，使用Glibc库，经过 Codesourcery 公司优化过推出的编译器。arm-none-linux-gnueabi-xxx 交叉编译工具的浮点运算非常优秀。一般ARM9、ARM11、Cortex-A 内核，带有 Linux 操作系统的会用到。</span><br><span class="line"></span><br><span class="line">3、arm-eabi-gcc</span><br><span class="line">Android ARM 编译器。</span><br><span class="line"></span><br><span class="line">4、armcc</span><br><span class="line">ARM 公司推出的编译工具，功能和 arm-none-eabi 类似，可以编译裸机程序（u-boot、kernel），但是不能编译 Linux 应用程序。armcc一般和ARM一起，Keil MDK、ADS、RVDS和DS-5中的编译器都是armcc，所以 armcc 编译器都是收费的（爱国版除外，呵呵~~）。</span><br><span class="line"></span><br><span class="line">5、arm-none-uclinuxeabi-gcc 和 arm-none-symbianelf-gcc</span><br><span class="line">arm-none-uclinuxeabi 用于uCLinux，使用Glibc。</span><br><span class="line"></span><br><span class="line">arm-none-symbianelf 用于symbian，没用过，不知道C库是什么 。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 缺少包查找</span></span><br><span class="line">* 如果PC上可以执行到板子上不能执行，那么说明板子上的文件系统里缺少某个包，并且板子上一般会提醒缺少哪个包的。</span><br><span class="line">* 如何在PC上找到对你应的包呢？apt-file search</span><br><span class="line">    * sudo apt-get install apt-file</span><br><span class="line">    * sudo apt-file update</span><br><span class="line">    * apt-file search *<span class="string">.so.1</span></span><br><span class="line">    * 例如：apt-file search libjpeg.so.8</span><br></pre></td></tr></table></figure></p><pre><code>libjpeg-turbo8: /usr/lib/x86_64-linux-gnu/libjpeg.so.8libjpeg-turbo8: /usr/lib/x86_64-linux-gnu/libjpeg.so.8.0.2```* 右边的是匹配你的库，左边的是你查的库所在的包，所以需要的包是libjpeg-turbo8* 判断库是否能用：objdump -a  *.so，看库是64位的还是32位的，是否与目标板一致</code></pre><h2 id="如何快速下载ubuntu"><a href="#如何快速下载ubuntu" class="headerlink" title="如何快速下载ubuntu"></a>如何快速下载ubuntu</h2><p>由于官网服务器在国外，下载速度奇慢，所以我们可以利用阿里云镜像下载ubuntu ubuntu 14.04： <a href="http://mirrors.aliyun.com/ubuntu-releases/14.04/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu-releases/14.04/</a> ubuntu 16.04： <a href="http://mirrors.aliyun.com/ubuntu-releases/16.04/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu-releases/16.04/</a> ubuntu 18.04： <a href="http://mirrors.aliyun.com/ubuntu-releases/18.04/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu-releases/18.04/</a> 没错，只要市面上存在的版本，阿里云镜像基本都有，下载速度可以达到3M/s</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看存储空间使用情况&quot;&gt;&lt;a href=&quot;#查看存储空间使用情况&quot; class=&quot;headerlink&quot; title=&quot;查看存储空间使用情况&quot;&gt;&lt;/a&gt;查看存储空间使用情况&lt;/h2&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>编译结果各字段含义</title>
    <link href="https://xubovey.github.io/2019/01/30/190130CompileSegment/"/>
    <id>https://xubovey.github.io/2019/01/30/190130CompileSegment/</id>
    <published>2019-01-30T21:02:29.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mcuoneclipse.com/2013/04/14/text-data-and-bss-code-and-data-size-explained/" target="_blank" rel="noopener">参考</a></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  text       data        bss        dec        hex    filename</span><br><span class="line"><span class="number">0x1408</span>       <span class="number">0x18</span>      <span class="number">0x81c</span>       <span class="number">7228</span>       <span class="number">1</span>c3c    size.elf</span><br></pre></td></tr></table></figure><p>text‘text’ is what ends up in FLASH memory. I can show this with adding</p><p>data‘data’ is used for initialized data. This is best explained with the following (global/extern) variable:</p><p>bssThe ‘bss’ contains all the uninitalized data.</p><p>💡 bss (or .bss, or BSS) is the abbreviation for ‘Block Started by Symbol’ by an old assembler (see this link).</p><p>decThe ‘dec’ (as a decimal number) is the sum of text, data and bss:<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">dec</span> = text + <span class="class"><span class="keyword">data</span> + bss</span></span><br></pre></td></tr></table></figure></p><p>Size – GNU UtilityThe size (or printsize) GNU utility has more options:</p><p>SummaryI hope I have sorted out things in a correct way. The way how the initialized data is reported might be confusing. But with the right knowledge (and .map file in mind), things get much clearer:</p><p>‘text’ is my code, vector table plus constants.</p><p>‘data’ is for initialized variables, and it counts for RAM and FLASH. The linker allocates the data in FLASH which then is copied from ROM to RAM in the startup code.</p><p>‘bss’ is for the uninitialized data in RAM which is initialized with zero in the startup code.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://mcuoneclipse.com/2013/04/14/text-data-and-bss-code-and-data-size-explained/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git常用操作</title>
    <link href="https://xubovey.github.io/2019/01/18/git/"/>
    <id>https://xubovey.github.io/2019/01/18/git/</id>
    <published>2019-01-18T09:36:10.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><ol><li><p>dev分支测试ok后合并到master分支</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout dev</span><br><span class="line">git pull</span><br><span class="line">git checkout <span class="literal">master</span></span><br><span class="line">git merge dev</span><br><span class="line">git push -u origin <span class="literal">master</span></span><br></pre></td></tr></table></figure></li><li><p>master分支更新后dev1分支同步master分支</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout <span class="keyword">master</span> <span class="title"></span></span><br><span class="line"><span class="title">git</span> pull </span><br><span class="line">git checkout dev</span><br><span class="line">git merge <span class="keyword">master</span> <span class="title"></span></span><br><span class="line"><span class="title">git</span> push -u origin dev</span><br></pre></td></tr></table></figure></li><li><p>从dev分支创建release分支，例如要发布2.0版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b <span class="keyword">release</span><span class="number">-2.0</span> develop</span><br><span class="line">// <span class="keyword">change</span> something <span class="keyword">to</span> <span class="keyword">commit</span></span><br><span class="line">git <span class="keyword">commit</span> -a -m <span class="string">"Bumped version number to 2.0"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li><li><p>release分支合并到master分支同上1</p></li><li><p>删除本地release分支</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -d <span class="built_in">release</span><span class="number">-2.0</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li><li><p>删除远程release分支</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> --<span class="built_in">delete</span> release-<span class="number">2.0</span></span><br></pre></td></tr></table></figure></li><li><p>bug分支，master分支上或其他某分支发现bug，则从当前分支上分出来一个branch</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b ISSUE-<span class="number">110</span> <span class="literal">master</span></span><br><span class="line">// change something</span><br><span class="line">git commit -a -m <span class="string">"Bumped version number to 2.0.1"</span></span><br><span class="line">//fix bug</span><br><span class="line">git commit -m <span class="string">"Fixed ISSUE-110 problem"</span></span><br><span class="line">git checkout <span class="literal">master</span></span><br><span class="line">git merge --no-ff ISSUE-<span class="number">110</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> <span class="number">2.0</span>.<span class="number">1</span></span><br><span class="line">git checkout develop</span><br><span class="line">git merge --no-ff ISSUE-<span class="number">110</span></span><br><span class="line">git branch -d ISSUE-<span class="number">110</span></span><br></pre></td></tr></table></figure></li><li><p>查看分支关系git log –graph –decorate –oneline –simplify-by-decoration –all</p></li><li><p>退出git log方法英文字母Q</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用操作&quot;&gt;&lt;a href=&quot;#常用操作&quot; class=&quot;headerlink&quot; title=&quot;常用操作&quot;&gt;&lt;/a&gt;常用操作&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;dev分支测试ok后合并到master分支&lt;/p&gt;
&lt;figure class=&quot;highlight cr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>堆栈bug引起的反思</title>
    <link href="https://xubovey.github.io/2019/01/15/heap-and-stack/"/>
    <id>https://xubovey.github.io/2019/01/15/heap-and-stack/</id>
    <published>2019-01-15T18:03:26.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>项目开发中程序运行一段时间后逻辑异常。各种排查，各种加printf。最后定位是vsprintf函数被执行后引起了改变了代码中的某全局变量。胡乱配置，修改一通，无果。最后请教技术大牛，指点迷津<code>堆栈搞大</code></p><h2 id="搞大堆栈"><a href="#搞大堆栈" class="headerlink" title="搞大堆栈"></a>搞大堆栈</h2><p>使用的单片机是STM32，在<code>startup_stm32f10x_hd.s</code>文件中有如下配置：<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Stack_Size</span>      <span class="meta">EQU</span>     <span class="number">0x00000800</span></span><br><span class="line"></span><br><span class="line">                <span class="meta">AREA</span>    STACK, NOINIT, READWRITE, <span class="meta">ALIGN</span><span class="number">=3</span></span><br><span class="line"><span class="symbol">Stack_Mem</span>       <span class="meta">SPACE</span>   Stack_Size</span><br><span class="line"><span class="symbol">__initial_sp</span></span><br><span class="line">                                                  </span><br><span class="line"><span class="comment">; &lt;h&gt; Heap Configuration</span></span><br><span class="line"><span class="comment">;   &lt;o&gt;  Heap Size (in Bytes) &lt;0x0-0xFFFFFFFF:8&gt;</span></span><br><span class="line"><span class="comment">; &lt;/h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Heap_Size</span>       <span class="meta">EQU</span>     <span class="number">0x00000400</span></span><br><span class="line"></span><br><span class="line">                <span class="meta">AREA</span>    HEAP, NOINIT, READWRITE, <span class="meta">ALIGN</span><span class="number">=3</span></span><br><span class="line"><span class="symbol">__heap_base</span></span><br><span class="line"><span class="symbol">Heap_Mem</span>        <span class="meta">SPACE</span>   Heap_Size</span><br><span class="line"><span class="symbol">__heap_limit</span></span><br></pre></td></tr></table></figure></p><p>可以发现stack空间是1K, Heap是512字节自然不大。分别进行修改：Heap-&gt;1K 仍然错误，之后又修改Stack-&gt;2K测试通过。</p><h2 id="堆栈对数据破坏的隐蔽性"><a href="#堆栈对数据破坏的隐蔽性" class="headerlink" title="堆栈对数据破坏的隐蔽性"></a>堆栈对数据破坏的隐蔽性</h2><p>如何发现堆栈引起的错误，想到的有  </p><ul><li>if语句判断变量时应该列举每一种情况，不支持的进行打印或告警，基本发现变量被异常修改；</li><li>单片机代码进来避免深层调用，避免局部变量过大</li><li>适当加大堆栈空间</li></ul><p>验证发现：后两种都可以解决遇到的问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;项目开发中程序运行一段时间后逻辑异常。各种排查，各种加printf。最后定位是vsprintf函数被执行后引起了改变了代码中的某全局变量。胡
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NXP(freescale) USBDM for HS08 and HS12</title>
    <link href="https://xubovey.github.io/2019/01/04/NXP-freescale-USBDM-for-HS08-and-HS12/"/>
    <id>https://xubovey.github.io/2019/01/04/NXP-freescale-USBDM-for-HS08-and-HS12/</id>
    <published>2019-01-04T09:12:29.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<p>项目需要买了1个USBDM仿真器，但是没有说明IO功能，问了淘宝店家后特记录备忘。  </p><table><thead><tr><th>序号</th><th>功能</th><th>序号</th><th>功能</th></tr></thead><tbody><tr><td>1</td><td>BKGD</td><td>2</td><td>GND</td></tr><tr><td>3</td><td>BKGD</td><td>4</td><td>RST</td></tr><tr><td>5</td><td>NC</td><td>6</td><td>VCC</td></tr></tbody></table><p><a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.7e432e8dlokL8y&amp;id=563639288303&amp;_u=44l82007830" target="_blank" rel="noopener">taobao</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目需要买了1个USBDM仿真器，但是没有说明IO功能，问了淘宝店家后特记录备忘。  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;序号&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbod
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>激活win10</title>
    <link href="https://xubovey.github.io/2019/01/04/190104-active-win10/"/>
    <id>https://xubovey.github.io/2019/01/04/190104-active-win10/</id>
    <published>2019-01-04T08:56:42.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="莫名的提升需要激活"><a href="#莫名的提升需要激活" class="headerlink" title="莫名的提升需要激活"></a>莫名的提升需要激活</h2><p>自从自动升级到win10系统后，本来使用良好的，可近日开始自动弹出提示过期需激活之类的窗口。本来想不管继续使用的，可是每天提示不是办法。所以就尝试解决，经过一些处理，找到了很简单的方法，特记录如下。</p><h2 id="相关密钥"><a href="#相关密钥" class="headerlink" title="相关密钥"></a>相关密钥</h2><h3 id="Win10家庭版密钥："><a href="#Win10家庭版密钥：" class="headerlink" title="Win10家庭版密钥："></a>Win10家庭版密钥：</h3><ul><li>家庭版：TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</li><li>Core 家庭版：YTMG3-N6DKC-DKB77-7M9GH-8HVX7</li><li>CoreSingleLanguage单语言win1064家庭版激活密钥：BT79Q-G7N6G-PGBYW-4YWX6-6F4BT</li><li>CoreCountrySpecific激活64位win10特定国家家庭版：N2434-X9D7W-8PF6X-8DV9T-8TYMD</li><li>Professional64位系统win10激活码(家庭版)：TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</li><li>Win10家庭版N：3KHY7-WNT83-DGQKR-F7HPR-844BM</li><li>Win10单语音家庭版：7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH</li><li><p>Win10特殊国家家庭版：PVMJN-6DFY6-9CCP6-7BKTT-D3WVR</p></li><li><p>专业版：W269N-WFGWX-YVC9B-4J6C9-T83GX</p></li><li>企业版：NPPR9-FWDCX-D2C8J-H872K-2YT43</li><li>教育版：NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</li><li>专业版N：MH37W-N47XK-V7XM9-C7227-GCQG9</li><li>企业版N：DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4</li><li>教育版N：2WH4N-8QGBV-H22JP-CT43Q-MDWWJ</li><li>企业版LSTB：WNMTR-4C88C-JK8YV-HQ7T2-76DF9</li><li>企业版LSTB N：2F77B-TNFGY-69QQF-B8YKP-D69TJ</li></ul><h3 id="密钥选择"><a href="#密钥选择" class="headerlink" title="密钥选择"></a>密钥选择</h3><p>当前电脑装的是win10单语言版，所以选择密钥为<code>BT79Q-G7N6G-PGBYW-4YWX6-6F4BT</code></p><h2 id="激活过程"><a href="#激活过程" class="headerlink" title="激活过程"></a>激活过程</h2><ol><li>管理员权限打开命令窗口</li><li>输入<code>slmgr.vbs /upk</code>卸载密钥，弹出窗口显示<code>已成功卸载了产品密钥</code></li><li>输入<code>slmgr /ipk BT79Q-G7N6G-PGBYW-4YWX6-6F4BT</code>安装密钥，提示<code>成功的安装了产品密钥</code></li><li>输入<code>slmgr /skms zh.us.to</code>弹出窗口<code>密钥管理服务计算机名成功的设置为zh.us.to</code></li><li>输入<code>slmgr /ato</code>，弹出窗口提示<code>成功的激活了产品</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;莫名的提升需要激活&quot;&gt;&lt;a href=&quot;#莫名的提升需要激活&quot; class=&quot;headerlink&quot; title=&quot;莫名的提升需要激活&quot;&gt;&lt;/a&gt;莫名的提升需要激活&lt;/h2&gt;&lt;p&gt;自从自动升级到win10系统后，本来使用良好的，可近日开始自动弹出提示过期需激活之类
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BeyondStudio develop ide</title>
    <link href="https://xubovey.github.io/2018/12/13/181213-BeyondStudio-develop-ide/"/>
    <id>https://xubovey.github.io/2018/12/13/181213-BeyondStudio-develop-ide/</id>
    <published>2018-12-13T09:00:45.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>BeyondStudio for NXP IDE（JN-SW-4141）是NXP的JN516X系列无线微控制器的开发平台。本工具是支持JN516X系列芯片的软件开发包和开发工具链合集，需要先安装，占用约700MB空间。<br>JN516x SDK需要第二步安装，用于支持不同的网络协议。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>JN-UG-3098<a href="https://pan.baidu.com/s/1ZTZLjXxYRGp_glxZYPUCsQ" target="_blank" rel="noopener">下载</a>  </li><li>JN-SW-4141<a href="https://pan.baidu.com/s/1FrquoxXaSGNlOL6bN1TEvw" target="_blank" rel="noopener">下载</a>  </li><li>JN-SW-4170<a href="https://pan.baidu.com/s/1jlJWhEkCf0LwhXojVjvERA" target="_blank" rel="noopener">下载</a>  </li><li>JN-SW-4170 V1840<a href="https://pan.baidu.com/s/1smR270bZ9KHsLPTG2wqgyA" target="_blank" rel="noopener">下载</a>i7nq  </li><li>JN-SW-4163<a href="https://pan.baidu.com/s/1Mim6SftD87ZuOs38ArzxAg" target="_blank" rel="noopener">下载</a>  </li><li>JN-SW-4168<a href="https://pan.baidu.com/s/1cfz_LnFkfeKG7DK7JcnwGA" target="_blank" rel="noopener">下载</a> 4suq   </li></ul><p>根据手册介绍：  </p><ol><li>BeyondStudio for NXP需要先安装: JN-SW-4141  </li><li>SDK需要后续安装: JN-SW-4170/4168  </li></ol><h2 id="app-zpscfg"><a href="#app-zpscfg" class="headerlink" title="app.zpscfg"></a>app.zpscfg</h2><p>app.zpscfg如何打开呢？其实<code>JN-UG-3098 Beyond Studio for NXP</code>文件中已经进行了详细描述。文件的<code>1.2.3Installing the ZigBee Plug-ins</code>章节有着详细的描述。需要在eclipse环境下安装2个插件分别是<code>ZPS Configuration Editor</code>和<code>JenOS Configuration Editor</code>,具体请参考文档<a href="https://www.nxp.com/docs/en/user-guide/JN-UG-3098.pdf" target="_blank" rel="noopener">JN-UG-3098</a></p><h2 id="工程导入"><a href="#工程导入" class="headerlink" title="工程导入"></a>工程导入</h2><p><a href="https://community.nxp.com/docs/DOC-340028" target="_blank" rel="noopener">异常处理</a>中的2.Project Directory</p><h2 id="其他问题参考"><a href="#其他问题参考" class="headerlink" title="其他问题参考"></a>其他问题参考</h2><p><a href="https://xubovey.github.io/2017/02/24/170224-BeyondStudio-Nxp-IDE-Note/">BeyondStudio Nxp IDE Note</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;BeyondStudio for NXP IDE（JN-SW-4141）是NXP的JN516X系列无线微控制器的开发平台。本工具是支持JN5
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SIM868通信测试</title>
    <link href="https://xubovey.github.io/2018/11/29/181129-sim868-send-data-test/"/>
    <id>https://xubovey.github.io/2018/11/29/181129-sim868-send-data-test/</id>
    <published>2018-11-29T11:28:40.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="移动状态"><a href="#移动状态" class="headerlink" title="移动状态"></a>移动状态</h2><h3 id="测试条件"><a href="#测试条件" class="headerlink" title="测试条件"></a>测试条件</h3><ul><li>兰州-郑州高铁列车</li><li>SIM868模块</li><li>移动卡</li><li>mqtt</li></ul><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><ul><li>建立网络连接后可在较大范围内（超过单基站覆盖范围）不掉线保持数据通信</li><li>数据延迟情况</li></ul><table><thead><tr><th>发送数据长度</th><th>发送延迟</th></tr></thead><tbody><tr><td>字节</td><td>秒</td></tr><tr><td>500</td><td>1-1.5</td></tr><tr><td>1000</td><td>3-4</td></tr></tbody></table><ul><li>移动状态联网比较困难，但是可在站台联网成功，之后保持较长距离和时间可持续通信</li></ul><h2 id="程序改进"><a href="#程序改进" class="headerlink" title="程序改进"></a>程序改进</h2><h3 id="使用AT-IPQSEND"><a href="#使用AT-IPQSEND" class="headerlink" title="使用AT+IPQSEND"></a>使用AT+IPQSEND</h3><p>通信情况改善很多，测试中最高达到2kB/s，测试为静态市内测试，直接给服务器发数据，没经过mqtt.</p><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">mqtt init do it.</span><br><span class="line"><span class="comment">[12:04:09.044]</span> task_mqtt.c <span class="comment">[user_msg_proc]</span> rxdata from TASK 1,len =13,msg_p=0x0</span><br><span class="line"><span class="comment">[12:04:09.044]</span> cmdType = 0</span><br><span class="line"><span class="comment">[12:04:09.044]</span> mqtt_connect.</span><br><span class="line"><span class="comment">[12:04:09.044]</span> </span><br><span class="line"><span class="comment">[12:04:09.044]</span> ---&gt; try to connect mqtt server:gxd729</span><br><span class="line"><span class="comment">[12:04:09.044]</span> </span><br><span class="line"><span class="comment">[12:04:09.044]</span> mqtt-&gt;keepalive = 0x3c</span><br><span class="line"><span class="comment">[12:04:09.044]</span> mqtt-&gt;clientid = gxd729</span><br><span class="line"><span class="comment">[12:04:09.044]</span> INFO: the at cmd func<span class="comment">[0]</span>'s range <span class="keyword">is</span> 46-47</span><br><span class="line"><span class="comment">[12:04:09.049]</span> INFO: funFirst:46  funLast:47</span><br><span class="line"><span class="comment">[12:04:09.049]</span> simcom data send result = 1</span><br><span class="line"><span class="comment">[12:04:09.049]</span> app_send_data_to_server return ok, send....</span><br><span class="line"><span class="comment">[12:04:09.049]</span> mqttc <span class="keyword">is</span> connecting to 114.67.229.68:3881...</span><br><span class="line"><span class="comment">[12:04:09.049]</span> </span><br><span class="line"><span class="comment">[12:04:09.049]</span> 1. WrToModem:AT+CIPSEND=0,124</span><br><span class="line"><span class="comment">[12:04:09.143]</span> </span><br><span class="line"><span class="comment">[12:04:09.143]</span> len=4,ReFrModem:</span><br><span class="line"><span class="comment">[12:04:09.147]</span> &gt; </span><br><span class="line"><span class="comment">[12:04:09.147]</span> at+cipsend? return &gt;</span><br><span class="line"><span class="comment">[12:04:09.147]</span> at+cipsend? return 1</span><br><span class="line"><span class="comment">[12:04:09.147]</span> INFO: callback return 46,1</span><br><span class="line"><span class="comment">[12:04:09.147]</span> 1. WrToModem:z</span><br><span class="line"><span class="comment">[12:04:09.255]</span> </span><br><span class="line"><span class="comment">[12:04:10.693]</span> sec:340</span><br><span class="line"><span class="comment">[12:04:10.693]</span> tcp=1,mqtt=0,tcp_tx=0</span><br><span class="line"><span class="comment">[12:04:10.693]</span> </span><br><span class="line"><span class="comment">[12:04:15.680]</span> sec:345</span><br><span class="line"><span class="comment">[12:04:15.680]</span> tcp=1,mqtt=0,tcp_tx=0</span><br><span class="line"><span class="comment">[12:04:15.680]</span> len=14,ReFrModem:</span><br><span class="line"><span class="comment">[12:04:15.799]</span> 0, SEND OK</span><br><span class="line"><span class="comment">[12:04:15.799]</span> </span><br><span class="line"><span class="comment">[12:04:15.799]</span> send data done,rx SEND OK</span><br><span class="line"><span class="comment">[12:04:15.799]</span> send data, return 4</span><br><span class="line"><span class="comment">[12:04:15.799]</span> INFO: callback return 47,4</span><br><span class="line"><span class="comment">[12:04:15.799]</span> </span><br><span class="line"><span class="comment">[12:04:20.669]</span> sec:350</span><br><span class="line"><span class="comment">[12:04:20.669]</span> tcp=1,mqtt=0,tcp_tx=1</span><br><span class="line"><span class="comment">[12:04:20.669]</span> </span><br><span class="line"><span class="comment">[12:04:22.401]</span> len=13,ReFrModem:</span><br><span class="line"><span class="comment">[12:04:22.401]</span> 0, <span class="keyword">CLOSED</span></span><br><span class="line"><span class="comment">[12:04:22.401]</span> </span><br><span class="line"><span class="comment">[12:04:22.401]</span> mqtt_disconnect :gxd729</span><br><span class="line"><span class="comment">[12:04:22.401]</span> </span><br><span class="line"><span class="comment">[12:04:22.401]</span> send data err tcp disconnected</span><br><span class="line"><span class="comment">[12:04:22.401]</span> app_send_data_to_server return err</span><br><span class="line"><span class="comment">[12:04:22.401]</span> mqttc <span class="keyword">is</span> disconnected.</span><br><span class="line"><span class="comment">[12:04:22.401]</span> </span><br><span class="line"><span class="comment">[12:04:22.401]</span> connect 0 lose.</span><br><span class="line"><span class="comment">[12:04:22.401]</span> INFO: the at cmd func<span class="comment">[0]</span>'s range <span class="keyword">is</span> 48-7</span><br><span class="line"><span class="comment">[12:04:22.401]</span> INFO: funFirst:48  funLast:7</span><br><span class="line"><span class="comment">[12:04:22.401]</span> simcom_gsm_connect_server start.</span><br><span class="line"><span class="comment">[12:04:22.401]</span> 1. WrToModem:AT+CIPSHUT</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;移动状态&quot;&gt;&lt;a href=&quot;#移动状态&quot; class=&quot;headerlink&quot; title=&quot;移动状态&quot;&gt;&lt;/a&gt;移动状态&lt;/h2&gt;&lt;h3 id=&quot;测试条件&quot;&gt;&lt;a href=&quot;#测试条件&quot; class=&quot;headerlink&quot; title=&quot;测试条件&quot;&gt;&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HEXO+NODE10.13+GULP4.0博客搭建过程中的坑</title>
    <link href="https://xubovey.github.io/2018/11/28/181128-node10-13-0-gulp4-0-bug-road/"/>
    <id>https://xubovey.github.io/2018/11/28/181128-node10-13-0-gulp4-0-bug-road/</id>
    <published>2018-11-28T18:05:06.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情"><a href="#前情" class="headerlink" title="前情"></a>前情</h2><p>个人的静态日志网页有些日子没更新了。这两天想分享些东西上来。结果因为之前在七牛上的图床不让免费使用了，所以博客的头像也挂了，很是不爽。然后就有了下面的折腾。</p><h2 id="尝鲜"><a href="#尝鲜" class="headerlink" title="尝鲜"></a>尝鲜</h2><p>奔着尝鲜的念头更新了node，直接到10.13.0版本，在之后的编写更新过程中无意执行了<code>npm audit fix --force</code>,结果把很多依赖给升级了，之后就悲剧了，本地可以执行<code>hexo server</code>，使用travis自动发布时却总是在gulp处出错，本地也试了确实压缩出问题，然后就是一顿不服，一顿尝试。最终在如下网站中获取帮助得以解决，为帮助其他踩坑者特写此篇。<a id="more"></a></p><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span>.<span class="string">js:</span><span class="number">85</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">assert</span>.AssertionError(&#123;</span><br></pre></td></tr></table></figure><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uglifier complains <span class="keyword">with</span> `Unexpected token: operator (&gt;)` <span class="keyword">in</span> <span class="number">0.10</span><span class="number">.5</span></span><br></pre></td></tr></table></figure><h2 id="线索"><a href="#线索" class="headerlink" title="线索"></a>线索</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Should be...</span><br><span class="line"></span><br><span class="line">ES5 → <span class="symbol">https:</span>/<span class="regexp">/www.npmjs.com/package</span><span class="regexp">/uglify-js → https:/</span><span class="regexp">/github.com/mishoo</span><span class="regexp">/UglifyJS2/blob</span><span class="regexp">/master/</span>README.md</span><br><span class="line">ES6+ (ES2015+) → <span class="symbol">https:</span>/<span class="regexp">/www.npmjs.com/package</span><span class="regexp">/uglify-es → https:/</span><span class="regexp">/github.com/mishoo</span><span class="regexp">/UglifyJS2/blob</span><span class="regexp">/harmony/</span>README.md</span><br><span class="line">... but is currently ...</span><br><span class="line"></span><br><span class="line">ES5 → <span class="symbol">https:</span>/<span class="regexp">/www.npmjs.com/package</span><span class="regexp">/uglify-js → https:/</span><span class="regexp">/github.com/mishoo</span><span class="regexp">/UglifyJS2/blob</span><span class="regexp">/master/</span>README.md</span><br><span class="line">ES6+ (ES2015+) → <span class="symbol">https:</span>/<span class="regexp">/www.npmjs.com/package</span><span class="regexp">/uglify-es → https:/</span><span class="regexp">/github.com/mishoo</span><span class="regexp">/UglifyJS2/blob</span><span class="regexp">/master/</span>README.md</span><br><span class="line"><span class="symbol">Cc:</span> <span class="variable">@isaacs</span> ... is there a way to have npmjs.com read the harmony branch README.md correctly? Thanks <span class="keyword">for</span> the visit <span class="keyword">in</span> advance.</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ol><li>起初错误是gulpfile.js格式与gulp4.0不兼容，4.0的主要变更可<a href="http://web.jobbole.com/82992/" target="_blank" rel="noopener">参考</a></li><li>不支持ES6出现的<code>Unexpected token: operator (&gt;)</code>错误</li></ol><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="不兼容问题解决"><a href="#不兼容问题解决" class="headerlink" title="不兼容问题解决"></a>不兼容问题解决</h3><p>修改gulpfile.js修改后<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-terser'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span><br><span class="line"><span class="comment">// 压缩css文件</span></span><br><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span><br><span class="line">  .pipe(minifycss())</span><br><span class="line">  .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩html文件</span></span><br><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">  .pipe(htmlclean())</span><br><span class="line">  .pipe(htmlmin(&#123;</span><br><span class="line">    removeComments: <span class="literal">true</span>,</span><br><span class="line">    minifyJS: <span class="literal">true</span>,</span><br><span class="line">    minifyCSS: <span class="literal">true</span>,</span><br><span class="line">    minifyURLs: <span class="literal">true</span>,</span><br><span class="line">  &#125;))</span><br><span class="line">  .pipe(gulp.dest(<span class="string">'./public'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩js文件</span></span><br><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span><br><span class="line">  .pipe(uglify())</span><br><span class="line">  .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 默认任务</span></span><br><span class="line"><span class="comment">// gulp.task('default', [</span></span><br><span class="line"><span class="comment">//   'minify-html','minify-css','minify-js'</span></span><br><span class="line"><span class="comment">// ]);</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, gulp.parallel(</span><br><span class="line">  <span class="string">'minify-html'</span>,<span class="string">'minify-css'</span>,<span class="string">'minify-js'</span></span><br><span class="line">));</span><br></pre></td></tr></table></figure></p><p>主要将<code>var uglify = require(&#39;gulp-uglify&#39;);</code>变为<code>var uglify = require(&#39;gulp-terser&#39;);</code><br>默认任务的并行执行做了修改，由<code>gulp.parallel</code>实现。为了使用gulp-terser还需要修改package.json文件中的<code>&quot;gulp-uglify&quot;: &quot;^3.0.1&quot;,</code>为<code>&quot;gulp-terser&quot;: &quot;^1.1.5&quot;,</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前情&quot;&gt;&lt;a href=&quot;#前情&quot; class=&quot;headerlink&quot; title=&quot;前情&quot;&gt;&lt;/a&gt;前情&lt;/h2&gt;&lt;p&gt;个人的静态日志网页有些日子没更新了。这两天想分享些东西上来。结果因为之前在七牛上的图床不让免费使用了，所以博客的头像也挂了，很是不爽。然后就有了下面的折腾。&lt;/p&gt;
&lt;h2 id=&quot;尝鲜&quot;&gt;&lt;a href=&quot;#尝鲜&quot; class=&quot;headerlink&quot; title=&quot;尝鲜&quot;&gt;&lt;/a&gt;尝鲜&lt;/h2&gt;&lt;p&gt;奔着尝鲜的念头更新了node，直接到10.13.0版本，在之后的编写更新过程中无意执行了&lt;code&gt;npm audit fix --force&lt;/code&gt;,结果把很多依赖给升级了，之后就悲剧了，本地可以执行&lt;code&gt;hexo server&lt;/code&gt;，使用travis自动发布时却总是在gulp处出错，本地也试了确实压缩出问题，然后就是一顿不服，一顿尝试。最终在如下网站中获取帮助得以解决，为帮助其他踩坑者特写此篇。
    
    </summary>
    
      <category term="hexo,gulp" scheme="https://xubovey.github.io/categories/hexo-gulp/"/>
    
    
      <category term="hexo,gulp" scheme="https://xubovey.github.io/tags/hexo-gulp/"/>
    
  </entry>
  
  <entry>
    <title>CodeWarrior开发环境搭建与程序下载</title>
    <link href="https://xubovey.github.io/2018/11/27/181128-nxp-s08-CodeWarrior/"/>
    <id>https://xubovey.github.io/2018/11/27/181128-nxp-s08-CodeWarrior/</id>
    <published>2018-11-27T22:59:06.000Z</published>
    <updated>2019-08-27T02:27:47.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>CodeWarriorV6.3版本为32位版本，需要安装在32位机器或虚拟机上，自己是装在虚拟机上的。<br>下载地址：<a href="https://pan.baidu.com/s/1KxLyj4M1UdU38vvc_VyKog" target="_blank" rel="noopener">CodeWarriorV6.3</a>, 提取码：7um4压缩包中包含4给文件分别是：  </p><ol><li>CW_MCU_V6.3–S08开发软件 - 软件安装包  </li><li>MC9S08AC60.pdf - 芯片手册  </li><li>USBDM_4_10_6_80_Win.msi - Flash编程工具  </li><li>USBDM_Drivers_1_2_0_WinXP_x32.msi - 编程器驱动  </li></ol><p>当然除此之外还需要对开发工具进行破解：</p><ul><li>把提供的license文件放到C:\Program Files\Freescale\CodeWarrior for Microcontrollers V6.3目录下</li></ul><p>注意：安装包是32位的，建议虚拟机安装XP，不要折腾去找64位版本。应该是仿真器驱动只能是xp-32位<a href="https://pan.baidu.com/s/1UKGKrKsD-LqnYIG3a1CGJg" target="_blank" rel="noopener">xp镜像下载</a>,提取码：br5w</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>需要依次安装软件安装包，编程工具和编程器驱动</p><h2 id="打开工程"><a href="#打开工程" class="headerlink" title="打开工程"></a>打开工程</h2><h3 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h3><p>从gitlab下载cloud_coffee_S9S08DZ60分支代码</p><h3 id="打开工程-1"><a href="#打开工程-1" class="headerlink" title="打开工程"></a>打开工程</h3><p>直接运行上一步下载的代码文件中的”WSD_010”,即可打开文件</p><h2 id="编译与下载"><a href="#编译与下载" class="headerlink" title="编译与下载"></a>编译与下载</h2><ol><li>快捷键“F7”可直接编译或单击工具栏”make”按钮进行编译  </li><li>如需将新的程序下载到单片机需要单击工具栏的”debug”按钮</li></ol><h2 id="仿真器与板相连"><a href="#仿真器与板相连" class="headerlink" title="仿真器与板相连"></a>仿真器与板相连</h2><p>仿真器与板之间只需要4根线即可烧录程序，分别是<code>VCC,GND,RST,BKG</code><br>板子上的IO描述在背面，仿真器上的IO描述在正面，对应连接即可</p><h2 id="只下载步骤"><a href="#只下载步骤" class="headerlink" title="只下载步骤"></a>只下载步骤</h2><p>安装如下工具</p><ol start="3"><li>USBDM_4_10_6_80_Win.msi - Flash编程工具  </li><li>USBDM_Drivers_1_2_0_WinXP_x32.msi - 编程器驱动  </li></ol><ul><li>开始-&gt;USBDM 4.10.6.80-&gt;HS08 Programmer</li><li>连接仿真器</li><li>Interface-&gt;Detect连接仿真器</li><li>Target-&gt;LoadHexFiles,加载二进制文件</li><li>Target-&gt;Device Selection选择AC-MC9S08AC60</li><li>连接目标板</li><li>Target-&gt;Device Selection-&gt;Detect Chip</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;CodeWarriorV6.3版本为32位版本，需要安装在32位机器或虚拟机上，自己是装在虚拟机上的。&lt;br&gt;下载地址：&lt;a href=&quot;h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>zigbee-tree-network-space</title>
    <link href="https://xubovey.github.io/2017/12/26/171226-zigbee-tree-network-space/"/>
    <id>https://xubovey.github.io/2017/12/26/171226-zigbee-tree-network-space/</id>
    <published>2017-12-26T13:27:55.000Z</published>
    <updated>2019-08-27T02:27:47.160Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://archive.freaklabs.org/index.php/blog/zigbee/zigbee-tree-routing-how-it-works-and-why-it-sucks.html" target="_blank" rel="noopener">Zigbee Tree Routing - How It Works and Why It Sucks</a></p><p>研究发现博文中Cm!=Rm情况下的公式存在问题。</p><p>描述树形网络可用3个重要参数：Dm：最大网络深度Cm：最大子节点数量Rm：子节点中最大路由数量, Cm&gt;=Rm</p><p>先看简单例子：Dm = 2, Cm = 3, Rm = 3Dm   Cm=Rm0    3^0=11    3^1=32    3^2=9可以看出网络规模等于：<br><code>sum(Rm^n); n={0..Dm}</code></p><p>但是如果Cm&gt;Rm，例如：<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Dm = <span class="number">2</span>, Cm = <span class="number">7</span>, Rm = <span class="number">3</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>                 <span class="number">13</span>                    <span class="number">21</span></span><br><span class="line">        <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span>  <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span>  <span class="number">22</span> <span class="number">23</span> <span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span> <span class="number">28</span></span><br><span class="line"></span><br><span class="line">Dm    Rm     Cm-Rm=<span class="number">4</span></span><br><span class="line"><span class="number">0</span>     <span class="number">3</span>^<span class="number">0</span>=<span class="number">1</span>  <span class="number">0</span></span><br><span class="line"><span class="number">1</span>     <span class="number">3</span>^<span class="number">1</span>=<span class="number">3</span>  <span class="number">4</span>*<span class="number">3</span>^<span class="number">0</span>=<span class="number">4</span></span><br><span class="line"><span class="number">2</span>     <span class="number">3</span>^<span class="number">2</span>=<span class="number">9</span>  <span class="number">4</span>*<span class="number">3</span>^<span class="number">1</span>=<span class="number">12</span></span><br></pre></td></tr></table></figure></p><p>可以看出网络规模为1 + 3 + 4 + 9 + 12=29等于: </p><p><code>sum(Rm^n); n={0..Dm} + sum((Cm-Rm)*Rm^n); n={0..Dm-1}</code>整理后：</p><p><code>1+sum(Cm*Rm^n); n={0..Dm-1}</code>  </p><p>Dm = 2, Cm = 7, Rm = 3带入公式；1 + 7<em>1 + 7</em>3 = 29</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考：&lt;a href=&quot;https://archive.freaklabs.org/index.php/blog/zigbee/zigbee-tree-routing-how-it-works-and-why-it-sucks.html&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
      <category term="zigbee" scheme="https://xubovey.github.io/categories/zigbee/"/>
    
    
      <category term="zigbee" scheme="https://xubovey.github.io/tags/zigbee/"/>
    
      <category term="tree network" scheme="https://xubovey.github.io/tags/tree-network/"/>
    
  </entry>
  
  <entry>
    <title>RF4CE_Remote eState</title>
    <link href="https://xubovey.github.io/2017/07/24/170727-RF4CE_Remote/"/>
    <id>https://xubovey.github.io/2017/07/24/170727-RF4CE_Remote/</id>
    <published>2017-07-24T13:44:28.000Z</published>
    <updated>2019-08-27T02:27:47.160Z</updated>
    
    <content type="html"><![CDATA[<h2 id="eState"><a href="#eState" class="headerlink" title="eState"></a>eState</h2><p><div id="flowchart-0" class="flow-chart"></div></p><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">E_COLD_START=>start: E_COLD_STARTE_COLD_START -> E_WAIT_FOR_EV_START_CFME_WAIT_FOR_EV_START_CFM -> E_WAIT_FOR_KEYE_WAIT_FOR_KEY -> E_START_DISCOVERYE_START_DISCOVERY -> E_WAIT_FOR_EV_DISC_DONEE_WAIT_FOR_EV_DISC_DONE -> E_RF4CE_EV_DISC_CFME_RF4CE_EV_DISC_CFM -> E_START_PAIRINGE_RF4CE_EV_DISC_CFM -> E_PRE_RUNNINGE_RF4CE_EV_DISC_CFM -> E_WAIT_FOR_KEYE_START_PAIRING -> E_RF4CE_EV_PAIR_CFME_RF4CE_EV_PAIR_CFM -> E_PAIREDE_RF4CE_EV_PAIR_CFM -> E_PRE_RUNNINGE_RF4CE_EV_PAIR_CFM -> E_WAIT_FOR_KEYE_PAIRED -> E_PRE_RUNNINGE_PRE_RUNNING -> E_RUNNINGE_RUNNING -> E_PRE_RUNNINGE_RUNNING -> E_START_DISCOVERYE_RUNNING -> E_TRANSMITTINGE_TRANSMIT_FAILED -> E_PRE_RUNNINGE_TRANSMITTING -> E_RF4CE_EV_NLDE_CFME_RF4CE_EV_NLDE_CFM -> E_RUNNINGE_RF4CE_EV_NLDE_CFM -> E_TRANSMIT_FAILED</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;eState&quot;&gt;&lt;a href=&quot;#eState&quot; class=&quot;headerlink&quot; title=&quot;eState&quot;&gt;&lt;/a&gt;eState&lt;/h2&gt;&lt;p&gt;&lt;div id=&quot;flowchart-0&quot; class=&quot;flow-chart&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
  </entry>
  
</feed>
